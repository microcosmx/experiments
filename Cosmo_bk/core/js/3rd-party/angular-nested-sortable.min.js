/**
 * @license Angular NestedSortable v1.2.5
 * (c) 2010-2014. https://github.com/JimLiu/Angular-NestedSortable
 * License: MIT
 */
!function(){"use strict";angular.module("ui.nestedSortable",[]).constant("nestedSortableConfig",{listClass:"nestedSortable-list",itemClass:"nestedSortable-item",handleClass:"nestedSortable-handle",placeHolderClass:"nestedSortable-placeholder",dragClass:"nestedSortable-drag",threshold:30})}(),function(){"use strict";angular.module("ui.nestedSortable").factory("$helper",["$document","$window",function($document,$window){return{height:function(element){return element.prop("scrollHeight")},width:function(element){return element.prop("scrollWidth")},offset:function(element){var boundingClientRect=element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),top:boundingClientRect.top+($window.pageYOffset||$document[0].body.scrollTop||$document[0].documentElement.scrollTop),left:boundingClientRect.left+($window.pageXOffset||$document[0].body.scrollLeft||$document[0].documentElement.scrollLeft)}},positionStarted:function(e,target){var pos={};return pos.offsetX=e.pageX-this.offset(target).left,pos.offsetY=e.pageY-this.offset(target).top,pos.startX=pos.lastX=e.pageX,pos.startY=pos.lastY=e.pageY,pos.nowX=pos.nowY=pos.distX=pos.distY=pos.dirAx=0,pos.dirX=pos.dirY=pos.lastDirX=pos.lastDirY=pos.distAxX=pos.distAxY=0,pos},positionMoved:function(e,pos,firstMoving){pos.lastX=pos.nowX,pos.lastY=pos.nowY,pos.nowX=e.pageX,pos.nowY=e.pageY,pos.distX=pos.nowX-pos.lastX,pos.distY=pos.nowY-pos.lastY,pos.lastDirX=pos.dirX,pos.lastDirY=pos.dirY,pos.dirX=0===pos.distX?0:pos.distX>0?1:-1,pos.dirY=0===pos.distY?0:pos.distY>0?1:-1;var newAx=Math.abs(pos.distX)>Math.abs(pos.distY)?1:0;return firstMoving?(pos.dirAx=newAx,void(pos.moving=!0)):(pos.dirAx!==newAx?(pos.distAxX=0,pos.distAxY=0):(pos.distAxX+=Math.abs(pos.distX),0!==pos.dirX&&pos.dirX!==pos.lastDirX&&(pos.distAxX=0),pos.distAxY+=Math.abs(pos.distY),0!==pos.dirY&&pos.dirY!==pos.lastDirY&&(pos.distAxY=0)),void(pos.dirAx=newAx))}}}])}(),function(){"use strict";angular.module("ui.nestedSortable").controller("NestedSortableController",["$scope","nestedSortableConfig",function($scope){$scope.sortableElement=null,$scope.sortableModelValue=null,$scope.callbacks=null,$scope.items=[],$scope.initSortable=function(element){$scope.sortableElement=element},$scope.insertSortableItem=function(index,itemModelData){$scope.sortableModelValue.splice(index,0,itemModelData),$scope.$apply()},$scope.initSubItemElement=function(subElement){subElement.parentScope=$scope},$scope.parentItemScope=function(){return $scope.sortableElement.parentItemScope},$scope.level=function(){var parentItem=$scope.parentItemScope();return parentItem?parentItem.level()+1:1}}])}(),function(){"use strict";angular.module("ui.nestedSortable").controller("NestedSortableHandleController",["$scope","$attrs","nestedSortableConfig",function($scope){$scope.initHandle=function(element){element.attr("sortable-elment-type","handle")}}])}(),function(){"use strict";angular.module("ui.nestedSortable").controller("NestedSortableItemController",["$scope","$attrs","nestedSortableConfig",function($scope){$scope.sortableItemElement=null,$scope.subSortableElement=null,$scope.initItem=function(element){$scope.sortableItemElement=element,$scope.initSubItemElement(element),$scope.items.splice($scope.$index,0,$scope),element.attr("sortable-elment-type","item")},$scope.removeItem=function(){var index=$scope.$index;if(index>-1){var item=$scope.sortableModelValue.splice(index,1)[0];return $scope.items.splice(index,1)[0],"$apply"!=$scope.$root.$$phase&&"$digest"!=$scope.$root.$$phase&&$scope.$apply(),item}return null};var subLevel=0,countSubLevel=function(scope){for(var count=0,i=0;i<scope.items.length;i++){var itemSub=scope.items[i].subScope();itemSub&&(count=1,countSubLevel(itemSub))}subLevel+=count};$scope.maxSubLevels=function(){return subLevel=0,$scope.subScope()&&countSubLevel($scope.subScope()),subLevel},$scope.itemData=function(){return $scope.sortableModelValue[$scope.$index]},$scope.setSubSortableElement=function(subElement){$scope.subSortableElement=subElement,subElement&&(subElement.parentItemScope=$scope)},$scope.parentScope=function(){return $scope.sortableItemElement.parentScope},$scope.subScope=function(){if(!$scope.subSortableElement)return null;var subScope=$scope.subSortableElement.scope();return subScope&&!subScope.sortableModelValue&&(subScope=null),subScope},$scope.accept=function(sourceItemScope){return $scope.callbacks.accept(sourceItemScope.itemData(),sourceItemScope,$scope.parentScope())},$scope.childAccept=function(sourceItemScope){return $scope.subScope()&&$scope.subScope().callbacks.accept(sourceItemScope.itemData(),sourceItemScope,$scope.subScope())},$scope.prev=function(){return $scope.$index>0?$scope.items[$scope.$index-1]:null}}])}(),function(){"use strict";angular.module("ui.nestedSortable").directive("uiNestedSortable",["nestedSortableConfig","$window",function(nestedSortableConfig){return{require:["ngModel","?^uiNestedSortableItem"],restrict:"A",scope:!0,controller:"NestedSortableController",link:function(scope,element,attrs,controllersArr){var callbacks={accept:null},config={};angular.extend(config,nestedSortableConfig),config.listClass&&element.addClass(config.listClass);var ngModel=controllersArr[0],itemCtrl=controllersArr[1];scope.initSortable(element),itemCtrl&&scope.setSubSortableElement(element),ngModel&&(ngModel.$render=function(){scope.sortableModelValue=ngModel.$modelValue}),callbacks.accept=function(){return!0},callbacks.orderChanged=function(){},callbacks.itemRemoved=function(){},callbacks.itemAdded=function(){},callbacks.itemMoved=function(){},callbacks.itemClicked=function(){},scope.$watch(attrs.uiNestedSortable,function(newVal){angular.forEach(newVal,function(value,key){callbacks[key]&&"function"==typeof value&&(callbacks[key]=value)}),scope.callbacks=callbacks},!0),element.on("$destroy",function(){itemCtrl&&(scope.setSubSortableElement(null),element.parentItemScope=null)})}}}])}(),function(){"use strict";angular.module("ui.nestedSortable").directive("uiNestedSortableHandle",["nestedSortableConfig","$helper","$window","$document",function(nestedSortableConfig,$helper,$window,$document){return{require:"^uiNestedSortableItem",restrict:"A",controller:"NestedSortableHandleController",link:function(scope,element){var placeElm,hiddenPlaceElm,targetScope,sourceIndex,destIndex,sameParent,pos,dragElm,dragItemElm,dragItem,firstMoving,targetItem,targetBefore,config={};angular.extend(config,nestedSortableConfig),scope.initHandle(element),config.handleClass&&element.addClass(config.handleClass);var hasTouch="ontouchstart"in window,copyArray=function(sourceArray){for(var arrayCopy=[],i=0;i<sourceArray.length;i++)arrayCopy.push(sourceArray[i]);return arrayCopy},dragStartEvent=function(e){if(hasTouch||2!=e.button&&3!=e.which){var sourceItem=angular.element(e.target).scope().itemData();scope.callbacks.itemClicked(sourceItem);for(var target=angular.element(e.target),nodrag=function(targetElm){return"undefined"!=typeof targetElm.attr("nodrag")||"undefined"!=typeof targetElm.attr("data-nodrag")};target&&target[0]&&target[0]!=element;){if(nodrag(target))return;target=target.parent()}var moveObj=e;hasTouch&&(void 0!==e.targetTouches?moveObj=e.targetTouches.item(0):void 0!==e.originalEvent&&void 0!==e.originalEvent.targetTouches&&(moveObj=e.originalEvent.targetTouches.item(0))),e.preventDefault(),firstMoving=!0,targetScope=null,sourceIndex=scope.$index,dragItem={index:scope.$index,items:copyArray(scope.items),scope:scope,reset:function(index,scope,dragItemScope){sameParent=scope.sortableElement==dragItemScope.sortableElement,sameParent&&index>sourceIndex&&index--,destIndex=index,this.index=index,this.scope=scope,this.items=copyArray(scope.items);var i=this.items.indexOf(dragItemScope);i>-1&&this.items.splice(i,1),this.items.splice(index,0,dragItemScope)},prev:function(){return this.index>0?this.items[this.index-1]:null},next:function(){return this.index<this.items.length-1?this.items[this.index+1]:null}};var tagName=scope.sortableItemElement.prop("tagName");placeElm=angular.element(document.createElement(tagName)).addClass(config.placeHolderClass),hiddenPlaceElm=angular.element(document.createElement(tagName)),dragItemElm=scope.sortableItemElement,pos=$helper.positionStarted(moveObj,dragItemElm),placeElm.css("height",$helper.height(dragItemElm)+"px"),dragElm=angular.element(document.createElement(scope.sortableElement.prop("tagName"))).addClass(scope.sortableElement.attr("class")).addClass(config.dragClass),dragElm.css("width",$helper.width(dragItemElm)+"px"),dragItemElm.after(placeElm),dragItemElm.after(hiddenPlaceElm),dragItemElm[0].parentNode.removeChild(dragItemElm[0]),dragElm.append(dragItemElm),$document.find("body").append(dragElm),dragElm.css({left:moveObj.pageX-pos.offsetX+"px",top:moveObj.pageY-pos.offsetY+"px"}),hasTouch?(angular.element($document).bind("touchend",dragEndEvent),angular.element($document).bind("touchcancel",dragEndEvent),angular.element($document).bind("touchmove",dragMoveEvent)):(angular.element($document).bind("mouseup",dragEndEvent),angular.element($document).bind("mousemove",dragMoveEvent))}},dragMoveEvent=function(e){var currentAccept,prev,childAccept,moveObj=e;if(hasTouch&&(void 0!==e.touches?moveObj=e.touches.item(0):void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(moveObj=e.originalEvent.touches.item(0))),dragElm){if(e.preventDefault(),dragElm.css({left:moveObj.pageX-pos.offsetX+"px",top:moveObj.pageY-pos.offsetY+"px"}),$helper.positionMoved(e,pos,firstMoving),firstMoving)return void(firstMoving=!1);if(pos.dirAx&&pos.distAxX>=config.threshold){pos.distAxX=0,sameParent=!1;var collapsed=!1;if(pos.distX>0&&(prev=dragItem.prev(),prev&&!collapsed&&(childAccept=prev.childAccept(scope),childAccept&&(prev.subSortableElement.append(placeElm),destIndex=prev.subScope().items.length,targetScope=prev.subScope(),dragItem.reset(destIndex,targetScope,scope)))),pos.distX<0){var next=dragItem.next();next||(targetItem=dragItem.scope.parentItemScope(),targetItem&&(currentAccept=targetItem.accept(scope),currentAccept&&(targetItem.sortableItemElement.after(placeElm),destIndex=targetItem.$index+1,targetScope=targetItem,dragItem.reset(destIndex,targetItem.parentScope(),scope))))}}var moveRight=$helper.offset(dragElm).left-$helper.offset(placeElm).left>=config.threshold,targetX=moveObj.pageX-document.body.scrollLeft,targetY=moveObj.pageY-(window.pageYOffset||document.documentElement.scrollTop);angular.isFunction(dragElm.hide)&&dragElm.hide();var targetElm=angular.element(document.elementFromPoint(targetX,targetY));if(angular.isFunction(dragElm.show)&&dragElm.show(),"item"!=targetElm.attr("sortable-elment-type")&&"handle"!=targetElm.attr("sortable-elment-type"))return;targetItem=targetElm.scope(),targetElm=targetItem.sortableItemElement;var targetItemData=null;if(targetItem&&(targetItemData=targetItem.itemData()),currentAccept=targetItem.accept(scope),!pos.dirAx){sameParent=!1;var targetOffset=$helper.offset(targetElm);targetBefore=$helper.offset(placeElm).top>targetOffset.top?$helper.offset(dragElm).top<targetOffset.top+$helper.height(targetElm)/2:moveObj.pageY<targetOffset.top,targetBefore?(prev=targetItem.prev(),childAccept=prev&&prev.childAccept(scope),!childAccept||!moveRight&&currentAccept?currentAccept&&(targetElm[0].parentNode.insertBefore(placeElm[0],targetElm[0]),destIndex=targetItem.$index,targetScope=targetItem.parentScope(),dragItem.reset(destIndex,targetScope,scope)):(targetItem=prev,targetItem.subSortableElement.append(placeElm),destIndex=targetItem.subScope().items.length,targetScope=targetItem.subScope(),dragItem.reset(destIndex,targetScope,scope))):(childAccept=targetItem.childAccept(scope),!childAccept||!moveRight&&currentAccept?currentAccept&&(targetElm.after(placeElm),destIndex=targetItem.$index+1,targetScope=targetItem.parentScope(),dragItem.reset(destIndex,targetScope,scope)):(targetItem.subSortableElement.append(placeElm),destIndex=targetItem.subScope().items.length,targetScope=targetItem.subScope(),dragItem.reset(destIndex,targetScope,scope)))}}},dragEndEvent=function(e){if(dragElm&&(e.preventDefault(),dragItemElm[0].parentNode.removeChild(dragItemElm[0]),hiddenPlaceElm.replaceWith(dragItemElm),placeElm.remove(),dragElm.remove(),dragElm=null,targetScope&&(!sameParent||sourceIndex!=destIndex))){var source=scope.removeItem();targetScope.insertSortableItem(destIndex,source,scope),sameParent?scope.callbacks.orderChanged(scope.sortableElement.scope(),source,sourceIndex,destIndex):(scope.callbacks.itemRemoved(scope.sortableElement.scope(),source,sourceIndex),targetScope.callbacks.itemAdded(targetScope,source,destIndex),scope.callbacks.itemMoved(scope.sortableElement.scope(),source,sourceIndex,targetScope,destIndex))}hasTouch?(angular.element($document).unbind("touchend",dragEndEvent),angular.element($document).unbind("touchcancel",dragEndEvent),angular.element($document).unbind("touchmove",dragMoveEvent)):(angular.element($document).unbind("mouseup",dragEndEvent),angular.element($document).unbind("mousemove",dragMoveEvent))};hasTouch?element.bind("touchstart",dragStartEvent):element.bind("mousedown",dragStartEvent)}}}])}(),function(){"use strict";angular.module("ui.nestedSortable").directive("uiNestedSortableItem",["nestedSortableConfig","$window",function(nestedSortableConfig){return{require:"^uiNestedSortable",restrict:"A",controller:"NestedSortableItemController",link:function(scope,element){var config={};angular.extend(config,nestedSortableConfig),config.itemClass&&element.addClass(config.itemClass),scope.initItem(element)}}}])}();